/******************************************************************************
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation version 2.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 */

#ifndef SWORDXX_VERSION_H
#define SWORDXX_VERSION_H

#include <cassert>
#include <cstdint>
#include <mutex>
#include <string>
#include <utility>


namespace swordxx {
namespace detail {

struct VersionStaticInit { static std::mutex mutex; };

} /* namespace detail { */

using Version = std::uint32_t;

#define SWORDXX_VERSION_STR "@SWORDXX_VERSION@"
#define SWORDXX_VERSION ::swordxx::Version(@SWORDXX_VERSION_C@)

#define SWORDXX_SWORD_COMPAT_VERSION \
    ::swordxx::Version(@SWORDXX_SWORD_COMPAT_VERSION_C@)
#define SWORDXX_SWORD_COMPAT_VERSION_STR "@SWORDXX_SWORD_COMPAT_VERSION@"

std::string versionToString(Version v);

constexpr inline Version buildVersion() noexcept { return SWORDXX_VERSION; }
inline std::string buildVersionStr() noexcept {
    std::lock_guard<std::mutex> const guard(detail::VersionStaticInit::mutex);
    static std::string const staticStr(SWORDXX_VERSION_STR);
    return staticStr;
}

constexpr inline Version buildSwordCompatVersion() noexcept
{ return SWORDXX_SWORD_COMPAT_VERSION; }

inline std::string buildSwordCompatVersionStr() noexcept {
    std::lock_guard<std::mutex> const guard(
                swordxx::detail::VersionStaticInit::mutex);
    static std::string const staticStr(SWORDXX_SWORD_COMPAT_VERSION_STR);
    return staticStr;
}

Version runtimeVersion() noexcept;
std::string runtimeVersionStr() noexcept;

Version swordCompatVersion() noexcept;
std::string swordCompatVersionStr() noexcept;

std::pair<bool, Version> parseVersion(char const * c) noexcept;

} /* namespace swordxx { */

#endif /* SWORDXX_VERSION_H */
